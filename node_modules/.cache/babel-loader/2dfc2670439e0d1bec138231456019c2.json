{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jontan/Documents/GitHub/react-website/src/components/Navbar/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { FaBars } from 'react-icons/fa';\nimport { IconContext } from 'react-icons';\nimport { Nav, NavbarContainer, NavLogo, MobileIcon, NavMenu, NavItem, NavLinks, NavBtn, NavBtnLink } from './NavbarElements';\nimport { animateScroll as scroll } from 'react-scroll';\n\nconst Navbar = ({\n  toggle\n}) => {\n  _s();\n\n  const [scrollNav, setScrollNav] = useState(false);\n\n  const changeNav = () => {\n    if (window.scrollY >= 80) {\n      setScrollNav(true);\n    } else {\n      setScrollNav(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', changeNav);\n  }, []);\n\n  const toggleHome = () => {\n    scroll.scrollToTop();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n      value: {\n        color: '#fff'\n      },\n      children: /*#__PURE__*/_jsxDEV(Nav, {\n        scrollNav: scrollNav,\n        children: /*#__PURE__*/_jsxDEV(NavbarContainer, {\n          children: [/*#__PURE__*/_jsxDEV(NavLogo, {\n            to: \"/\",\n            onClick: toggleHome,\n            children: \" Jon Tan \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MobileIcon, {\n            onClick: toggle,\n            children: /*#__PURE__*/_jsxDEV(FaBars, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(NavMenu, {\n            children: [/*#__PURE__*/_jsxDEV(NavItem, {\n              children: /*#__PURE__*/_jsxDEV(NavLinks, {\n                to: \"about\",\n                smooth: true,\n                duration: 500,\n                spy: true,\n                exact: \"true\",\n                offset: -80,\n                children: \"About\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n              children: /*#__PURE__*/_jsxDEV(NavLinks, {\n                to: \"projects\",\n                smooth: true,\n                duration: 500,\n                spy: true,\n                exact: \"true\",\n                offset: -80,\n                children: \"Projects\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n              children: /*#__PURE__*/_jsxDEV(NavLinks, {\n                to: \"resume\",\n                children: \"Resume\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(NavBtn, {\n            children: /*#__PURE__*/_jsxDEV(NavBtnLink, {\n              to: \"/contact\",\n              children: \"Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Navbar, \"eaUcF+T16QTGbajlwzqOoSnbGek=\");\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/Users/jontan/Documents/GitHub/react-website/src/components/Navbar/index.js"],"names":["React","useEffect","useState","FaBars","IconContext","Nav","NavbarContainer","NavLogo","MobileIcon","NavMenu","NavItem","NavLinks","NavBtn","NavBtnLink","animateScroll","scroll","Navbar","toggle","scrollNav","setScrollNav","changeNav","window","scrollY","addEventListener","toggleHome","scrollToTop","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState} from 'react'\nimport {FaBars} from 'react-icons/fa'\nimport{IconContext} from 'react-icons'\nimport { Nav, NavbarContainer, NavLogo, MobileIcon, NavMenu, NavItem, NavLinks, NavBtn, NavBtnLink} from './NavbarElements'\nimport {animateScroll as scroll} from 'react-scroll'\n\nconst Navbar = ({toggle}) => {\n    const [scrollNav, setScrollNav] = useState(false)\n\n    const changeNav = () => {\n        if(window.scrollY >= 80) {\n            setScrollNav(true)\n        } else {\n            setScrollNav(false)\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('scroll', changeNav);\n    }, []);\n\n    const toggleHome = () => {\n        scroll.scrollToTop();\n    }\n\n    return (\n        <>\n            <IconContext.Provider value={{ color: '#fff'}}>\n                <Nav scrollNav={scrollNav}>\n                    <NavbarContainer>\n                        <NavLogo to=\"/\" onClick={toggleHome}> Jon Tan </NavLogo>\n                        <MobileIcon onClick={toggle}>\n                            <FaBars />\n                        </MobileIcon>\n                        <NavMenu>\n                            <NavItem>\n                                <NavLinks to=\"about\"\n                                smooth={true} duration={500} spy={true} exact='true' offset={-80}\n                                >About</NavLinks>\n                            </NavItem>\n                            <NavItem>\n                                <NavLinks to=\"projects\" smooth={true} duration={500} spy={true} exact='true' offset={-80}>Projects</NavLinks>\n                            </NavItem>\n                            <NavItem>\n                                <NavLinks to=\"resume\">Resume</NavLinks>\n                            </NavItem>\n                        </NavMenu>\n                        <NavBtn>\n                            <NavBtnLink to=\"/contact\">Contact</NavBtnLink>\n                        </NavBtn>\n                    </NavbarContainer>\n                </Nav>\n            </IconContext.Provider>\n        </>\n    );\n};\n\nexport default Navbar\n"]},"metadata":{},"sourceType":"module"}